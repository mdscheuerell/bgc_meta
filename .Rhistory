# SoluteYaxis <- list(expression(paste(NO[3]^{"-"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+1"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-2"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+3"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-4"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+5"},"-N state (± 1 SE)")))
pdf(file = file.path(here::here("plots"), "TestPlots.pdf"), paper = "letter")
for(i in 1:length(SoluteList)){
SoluteList_i <- SoluteList[i]
# SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
}
dev.off()
MARSmodCoefs.Ca <- MARSSparamCIs(MarsSeasSiteState[[1]], method = "hessian", alpha = 0.05, nboot = 1000)
head(MARSmodCoefs.Ca$coef)
CaCoef <- as.data.frame(MARSmodCoefs.Ca$coef[2:8]) #I ONLY SEE 6 COLUMNS
names(CaCoef) <- "Bias"
CaCoef$site <- rownames(CaCoef)
CaCoef2 <- CaCoef %>%
mutate(
#still not sure this is right
Bias_ug.L.mo = (exp(Bias)-1)*1000, #units mg/L/mo to ug/L/mo
site = as.factor(site),
site = fct_relevel(site, c("U.HJA", "U.ELA", "U.MEF", "U.TLW", "U.DOR", "U.HBEF", "U.BBWM"))) %>%
arrange(site)
head(CaCoef)
CaCoef <- as.data.frame(MARSmodCoefs.Ca$coef) #I ONLY SEE 6 COLUMNS
CaCoef
?MARSSparamCIs
str(MARSmodCoefs.Ca)
MARSmodCoefS <- MARSSparamCIs(MarsSeasSiteState, method = "hessian", alpha = 0.05, nboot = 1000)
CaCoef
CaCoef <- as.data.frame(MARSmodCoefs.Ca$coef[2:22])
CaCoef
CaCoef
names(CaCoef) <- "Bias"
CaCoef$site <- rownames(CaCoef)
CaCoef
library(tidyverse)
library(here)
library(MARSS)
library(ggpubr)
# Timeseries plots ----
TimeSeriesLength <- 288
BlankTS.01 <- as.data.frame(seq(1,TimeSeriesLength, by = 1))
BlankTS.0 <- seq.Date(from = as.Date("1986/11/01"), to = as.Date("2010/10/31"), "months")
BlankTS <- cbind(BlankTS.01, BlankTS.0)
names(BlankTS) <- c("TimeNum", "Date")
# original dataframe ----
df <- readr::read_csv(here::here("data", "tbl_solutes_unmanaged_mon_v2.csv"))
# GET BEST MODELS ----
# THE ORDER OF THE MODELS IS: "Ca"  "DOC" "NO3" "SO4" "NH4" "TDP"
# this is the "best" model for all solutes
MarsSeasSiteState <- readRDS(file = file.path(here::here("analysis"), "fitted_seas_unique_states_RW_b.rds"))
## Calcium ----
Ca <- as.data.frame(t(MarsSeasSiteState[[1]]$states)) %>%
# this is the # of rows in all of these files CAREFUL to change if needed
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "Ca")
Ca.se <- as.data.frame(t(MarsSeasSiteState[[1]]$states.se)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "Ca.se")
## DOC ----
DOC <- as.data.frame(t(MarsSeasSiteState[[2]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "DOC")
DOC.se <- as.data.frame(t(MarsSeasSiteState[[2]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "DOC.se")
## Nitrate -N
NO3N <- as.data.frame(t(MarsSeasSiteState[[3]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NO3N")
NO3N.se <- as.data.frame(t(MarsSeasSiteState[[3]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NO3N.se")
## Sulfate ----
SO4 <- as.data.frame(t(MarsSeasSiteState[[4]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "SO4")
SO4.se <- as.data.frame(t(MarsSeasSiteState[[4]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "SO4.se")
## NH4-N
NH4N <- as.data.frame(t(MarsSeasSiteState[[5]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NH4N")
NH4N.se <- as.data.frame(t(MarsSeasSiteState[[5]]$states.se)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NH4N.se")
## TDP
TDP <- as.data.frame(t(MarsSeasSiteState[[6]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.NF_DOR_HP3:X.NW_HJA_GSWS09, names_to = "WA", values_to = "TDP")
TDP.se <- as.data.frame(t(MarsSeasSiteState[[6]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.NF_DOR_HP3:X.NW_HJA_GSWS09, names_to = "WA", values_to = "TDP.se")
## Bring dataframes together ----
# "Ca"  "DOC" "NO3" "SO4" "NH4" "TDP"
states0.s <- Ca %>%
full_join(DOC, by = c("TimeNum", "WA"))%>%
full_join(NO3N, by = c("TimeNum", "WA"))%>%
full_join(SO4, by = c("TimeNum", "WA"))%>%
full_join(NH4N, by = c("TimeNum", "WA"))%>%
full_join(TDP, by = c("TimeNum", "WA")) %>%
pivot_longer(cols = Ca:TDP, names_to =  "solute", values_to = "states")
states0.se <-   Ca.se %>%
full_join(DOC.se, by = c("TimeNum", "WA"))%>%
full_join(NO3N.se, by = c("TimeNum", "WA"))%>%
full_join(SO4.se, by = c("TimeNum", "WA"))%>%
full_join(NH4N.se, by = c("TimeNum", "WA"))%>%
full_join(TDP.se, by = c("TimeNum", "WA")) %>%
pivot_longer(cols = Ca.se:TDP.se, names_to =  "solute", values_to = "states.se") %>%
mutate_at("solute", str_replace, ".se","")
states <- states0.s %>%
full_join(states0.se, by = c("TimeNum", "WA", "solute")) %>%
separate(WA, sep = "_", into= c("region", "site", "watershed")) %>%
mutate_at("region", str_replace, "X.", "") %>%
mutate_at(c("region", "site", "watershed"), factor)  %>%
full_join(BlankTS, by = "TimeNum") %>%
mutate(site = fct_relevel(site, c("HJA", "ELA", "MEF", "TLW", "DOR", "HBEF", "BBWM")),
Date = as.POSIXct(Date, format = "%Y-%m-%d"),
watershed = fct_relevel(watershed,
c("GSWS08", "GSWS09",
"EIF", "NEIF", "NWIF",
"S2", "S5",
"C32", "C35", "C38",
"HP3", "HP3A", "HP4", "HP5", "HP6", "HP6A",
"WS6", "WS7", "WS8", "WS9",
"EB")))
SiteList <- states %>% select(site, watershed) %>% distinct()
# SoluteYaxis <- list(expression(paste(NO[3]^{"-"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+1"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-2"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+3"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-4"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+5"},"-N state (± 1 SE)")))
pdf(file = file.path(here::here("plots"), "StatePlots.pdf"), paper = "letter")
for(i in 1:length(SoluteList)){
SoluteList_i <- SoluteList[i]
# SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
}
dev.off()
# Make plot
SoluteList <- unique(states$solute)
# SoluteYaxis <- list(expression(paste(NO[3]^{"-"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+1"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-2"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+3"},"-N state (± 1 SE)")),
#                     expression(paste(NO[3]^{"-4"},"-N state (± 1 SE)")),
#                     expression(paste(NH[4]^{"+5"},"-N state (± 1 SE)")))
pdf(file = file.path(here::here("plots"), "StatePlots.pdf"), paper = "letter")
for(i in 1:length(SoluteList)){
SoluteList_i <- SoluteList[i]
# SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
}
SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
summary()
summary(data = states %>%
filter(solute == SoluteList_i))
SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
SoluteList_i <- SoluteList[1]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
TestPlot_i
library(tidyverse)
library(here)
library(MARSS)
library(ggpubr)
# Timeseries plots ----
TimeSeriesLength <- 288
BlankTS.01 <- as.data.frame(seq(1,TimeSeriesLength, by = 1))
BlankTS.0 <- seq.Date(from = as.Date("1986/11/01"), to = as.Date("2010/10/31"), "months")
BlankTS <- cbind(BlankTS.01, BlankTS.0)
names(BlankTS) <- c("TimeNum", "Date")
# original dataframe ----
df <- readr::read_csv(here::here("data", "tbl_solutes_unmanaged_mon_v2.csv"))
# GET BEST MODELS ----
# THE ORDER OF THE MODELS IS: "Ca"  "DOC" "NO3" "SO4" "NH4" "TDP"
# this is the "best" model for all solutes
MarsSeasSiteState <- readRDS(file = file.path(here::here("analysis"), "fitted_seas_unique_states_RW_b.rds"))
## Calcium ----
Ca <- as.data.frame(t(MarsSeasSiteState[[1]]$states)) %>%
# this is the # of rows in all of these files CAREFUL to change if needed
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "Ca")
Ca.se <- as.data.frame(t(MarsSeasSiteState[[1]]$states.se)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "Ca.se")
## DOC ----
DOC <- as.data.frame(t(MarsSeasSiteState[[2]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "DOC")
DOC.se <- as.data.frame(t(MarsSeasSiteState[[2]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "DOC.se")
## Nitrate -N
NO3N <- as.data.frame(t(MarsSeasSiteState[[3]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NO3N")
NO3N.se <- as.data.frame(t(MarsSeasSiteState[[3]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NO3N.se")
## Sulfate ----
SO4 <- as.data.frame(t(MarsSeasSiteState[[4]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "SO4")
SO4.se <- as.data.frame(t(MarsSeasSiteState[[4]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "SO4.se")
## NH4-N
NH4N <- as.data.frame(t(MarsSeasSiteState[[5]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NH4N")
NH4N.se <- as.data.frame(t(MarsSeasSiteState[[5]]$states.se)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.EF_BBWM_EB:X.NW_HJA_GSWS09, names_to = "WA", values_to = "NH4N.se")
## TDP
TDP <- as.data.frame(t(MarsSeasSiteState[[6]]$states)) %>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1)) %>%
pivot_longer(cols = X.NF_DOR_HP3:X.NW_HJA_GSWS09, names_to = "WA", values_to = "TDP")
TDP.se <- as.data.frame(t(MarsSeasSiteState[[6]]$states.se))%>%
mutate(TimeNum = seq(1,TimeSeriesLength, by = 1))%>%
pivot_longer(cols = X.NF_DOR_HP3:X.NW_HJA_GSWS09, names_to = "WA", values_to = "TDP.se")
## Bring dataframes together ----
# "Ca"  "DOC" "NO3" "SO4" "NH4" "TDP"
states0.s <- Ca %>%
full_join(DOC, by = c("TimeNum", "WA"))%>%
full_join(NO3N, by = c("TimeNum", "WA"))%>%
full_join(SO4, by = c("TimeNum", "WA"))%>%
full_join(NH4N, by = c("TimeNum", "WA"))%>%
full_join(TDP, by = c("TimeNum", "WA")) %>%
pivot_longer(cols = Ca:TDP, names_to =  "solute", values_to = "states")
states0.se <-   Ca.se %>%
full_join(DOC.se, by = c("TimeNum", "WA"))%>%
full_join(NO3N.se, by = c("TimeNum", "WA"))%>%
full_join(SO4.se, by = c("TimeNum", "WA"))%>%
full_join(NH4N.se, by = c("TimeNum", "WA"))%>%
full_join(TDP.se, by = c("TimeNum", "WA")) %>%
pivot_longer(cols = Ca.se:TDP.se, names_to =  "solute", values_to = "states.se") %>%
mutate_at("solute", str_replace, ".se","")
states <- states0.s %>%
full_join(states0.se, by = c("TimeNum", "WA", "solute")) %>%
separate(WA, sep = "_", into= c("region", "site", "watershed")) %>%
mutate_at("region", str_replace, "X.", "") %>%
mutate_at(c("region", "site", "watershed"), factor)  %>%
full_join(BlankTS, by = "TimeNum") %>%
mutate(site = fct_relevel(site, c("HJA", "ELA", "MEF", "TLW", "DOR", "HBEF", "BBWM")),
Date = as.POSIXct(Date, format = "%Y-%m-%d"),
watershed = fct_relevel(watershed,
c("GSWS08", "GSWS09",
"EIF", "NEIF", "NWIF",
"S2", "S5",
"C32", "C35", "C38",
"HP3", "HP3A", "HP4", "HP5", "HP6", "HP6A",
"WS6", "WS7", "WS8", "WS9",
"EB")))
SiteList <- states %>% select(site, watershed) %>% distinct()
# Make plot
SoluteList <- unique(states$solute)
pdf(file = file.path(here::here("plots"), "MARSS_StatePlots.pdf"), paper = "letter")
for(i in 1:length(SoluteList)){
SoluteList_i <- SoluteList[i]
# SoluteList_i <- SoluteList[6]
TestPlot_i <- ggplot() +
geom_line( data = states %>%
filter(solute == SoluteList_i), aes(y = states, x = Date, color = watershed)) +
geom_ribbon(data = states %>%
filter(solute == SoluteList_i), aes(ymin = states - states.se,
ymax = states + states.se,
x = Date, fill= watershed),
alpha = 0.25, color = "transparent") +
facet_grid(site ~., scales = "free_x") +
theme_bw() +
ylab(SoluteList_i) +
xlab("Time") +
scale_x_datetime(date_labels = "%b-%y", date_breaks = "5 years") +
# scale_y_continuous(breaks = c(-7.5, 0, 7.5), limits = c(-7.5,7.5)) +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 14),
strip.text = element_text(size = 12),
panel.grid.minor = element_blank(),
panel.spacing = unit(1,"lines"))
print(TestPlot_i)
}
dev.off()
MARSmodCoefs.Ca <- MARSSparamCIs(MarsSeasSiteState[[1]], method = "hessian", alpha = 0.05, nboot = 1000)
head(MARSmodCoefs.Ca)
str(MARSmodCoefs.Ca)
MARSmodCoefs.Ca$par.lowCI
MARSmodCoefs.Ca$coef
?MARSSparamCIs
MARSmodCoefs.Ca$par.lowCI
MARSmodCoefs.Ca$par.lowCI$U
CaCoef <- as.data.frame(MARSmodCoefs.Ca$coef[2:22])
CaCoef
as.data.frame(MARSmodCoefs.Ca$coef)
dim(as.data.frame(MARSmodCoefs.Ca$coef) )
CaCoef.lowCI <- MARSmodCoefs.Ca$par.lowCI$U
MARSmodCoefs.Ca$par.lowCI
str(MARSmodCoefs.Ca)
MARSmodCoefs.Ca$par$U
CaCoef <- as.data.frame(MARSmodCoefs.Ca$par) #coefs and par return the same values
CaCoef <- as.data.frame(MARSmodCoefs.Ca$par$U) #coefs and par return the same values
CaCoef <- as.data.frame(matrix(U = MARSmodCoefs.Ca$par$U)) #coefs and par return the same values
CaCoef <- as.data.frame(as.matrix(U = MARSmodCoefs.Ca$par$U)) #coefs and par return the same values
?matrix
CaCoef <- as.data.frame(U = MARSmodCoefs.Ca$par$U) #coefs and par return the same values
CaCoef <- as.data.frame(MARSmodCoefs.Ca$par$U, MARSmodCoefs.Ca$par$U) #coefs and par return the same values
CaCoef
CaCoef <- as.data.frame(matrix(MARSmodCoefs.Ca$par$U, MARSmodCoefs.Ca$par$U)) #coefs and par return the same values
CaCoef <- as.data.frame(cbind(MARSmodCoefs.Ca$par$U, MARSmodCoefs.Ca$par$U)) #coefs and par return the same values
CaCoef
CaCoef <- as.data.frame(cbind(MARSmodCoefs.Ca$par$U,
MARSmodCoefs.Ca$par.lowCI$U,
MARSmodCoefs.Ca$par.upCI$U)) #coefs and par return the same values
CaCoef
?as.data.frame
CaCoef <- as.data.frame(cbind(MARSmodCoefs.Ca$par$U,
MARSmodCoefs.Ca$par.lowCI$U,
MARSmodCoefs.Ca$par.upCI$U),
col.names = c("U", "U_lowCI", "U_upCI")) #coefs and par return the same values
head(CaCoef)
names(CaCoef) <- c("U", "U_lowCI", "U_upCI")
head(CaCoef)
CaCoef$site <- rownames(CaCoef)
CaCoef
CaCoef2 <- CaCoef %>%
filter(!contains("("))
?filter
CaCoef2 <- CaCoef %>%
filter(!grepl("("))
CaCoef2 <- CaCoef %>%
filter(!grepl("(", site))
head(CaCoef)
CaCoef2 <- CaCoef %>%
filter(grepl("(", site))
CaCoef2 <- CaCoef %>%
filter(str_detect(site, "("))
CaCoef2 <- CaCoef %>%
filter(str_detect(site, "seas"))
CaCoef2
CaCoef2 <- CaCoef %>%
filter(!str_detect(site, "seas"))
CaCoef2
solute_i <- SoluteList[1]
MARSmodCoefs.i <- MARSSparamCIs(MarsSeasSiteState[[solute_i]], method = "hessian", alpha = 0.05, nboot = 1000)
solute_i
MARSmodCoefs.i <- MARSSparamCIs(MarsSeasSiteState[[i]], method = "hessian", alpha = 0.05, nboot = 1000)
i = 1
solute_i <- SoluteList[i]
MARSmodCoefs.i <- MARSSparamCIs(MarsSeasSiteState[[i]], method = "hessian", alpha = 0.05, nboot = 1000)
MARScoef.df <- as.data.frame(cbind(MARSmodCoefs.i$par$U,
MARSmodCoefs.i$par.lowCI$U,
MARSmodCoefs.i$par.upCI$U)) #coefs and par return the same values
names(MARScoef.df) <- c("U", "U_lowCI", "U_upCI")
MARScoef.df$site <- rownames(MARScoef.df)
MARScoef.df2 <- MARScoef.df %>%
filter(!str_detect(site, "seas")) %>%
mutate(solute = solute_i)
head(MARScoef.df2)
# Bias plot ----
# load the MARS data
MARSS_BiasCoefs <- matrix(nrow = 1, ncol = 5)
MARSS_BiasCoefs <- rbind(MARSS_BiasCoefs, MARScoef.df2)
# Bias plot ----
# load the MARS data
MARSS_BiasCoefs <- matrix(nrow = 1, ncol = 5)
names(MARSS_BiasCoefs) <- c("U", "U_lowCI", "U_upCI", "site", "solute")
MARSS_BiasCoefs <- rbind(MARSS_BiasCoefs, MARScoef.df2)
MARSS_BiasCoefs
# Bias plot ----
# load the MARS data
MARSS_BiasCoefs <- as.data.frame(matrix(nrow = 1, ncol = 5))
names(MARSS_BiasCoefs) <- c("U", "U_lowCI", "U_upCI", "site", "solute")
MARSS_BiasCoefs <- rbind(MARSS_BiasCoefs, MARScoef.df2)
MARSS_BiasCoefs
# Bias plot ----
# load the MARS data
MARSS_BiasCoefs <- as.data.frame(matrix(nrow = 1, ncol = 5))
names(MARSS_BiasCoefs) <- c("U", "U_lowCI", "U_upCI", "site", "solute")
for(i in 1:length(SoluteList)){
# i = 1
solute_i <- SoluteList[i]
MARSmodCoefs.i <- MARSSparamCIs(MarsSeasSiteState[[i]], method = "hessian", alpha = 0.05, nboot = 1000)
MARScoef.df <- as.data.frame(cbind(MARSmodCoefs.i$par$U,
MARSmodCoefs.i$par.lowCI$U,
MARSmodCoefs.i$par.upCI$U)) #coefs and par return the same values
names(MARScoef.df) <- c("U", "U_lowCI", "U_upCI")
MARScoef.df$site <- rownames(MARScoef.df)
MARScoef.df2 <- MARScoef.df %>%
filter(!str_detect(site, "seas")) %>%
mutate(solute = solute_i)
MARSS_BiasCoefs <- rbind(MARSS_BiasCoefs, MARScoef.df2)
}
